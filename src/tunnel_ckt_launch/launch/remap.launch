<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<launch>
  <arg name="bag"/>
  <arg name="name" default="chinook"/>
  <arg name="reproject" default="false"/>
  <arg name="reodom" default="false"/>
  <arg name="noodom" default="false"/> <!-- A setting for cartographer since it can make odom transform -->

  <arg name="rate" default="1.0"/>
  <arg name="mark_artifacts" default="false"/>
  <arg name="bag_out" default="false"/>
  <arg name="course" default="ex"/>
  <arg name="config" default="A"/>

  <!-- Mapping mode settings -->
  <arg name="omnimapper" default="false"/>
  <arg name="cartographer" default="false"/>
  <arg name="gmapping" default="false"/>
  <arg name="odom_only" default="false"/>

  <param name="use_sim_time" value="true"/>
  <group if="$(arg reodom)">
    <group if="$(arg noodom)">
      <node pkg="tf_hijacker" type="tf_hijacker" name="tf_hijacker" output="screen">
        <param name="suppress1" value="$(arg name)/map"/>
        <param name="suppress2" value="map"/>
        <param name="suppress3" value="$(arg name)/odom"/>
      </node>
    </group>
    <group unless="$(arg noodom)">
      <node pkg="tf_hijacker" type="tf_hijacker" name="tf_hijacker" output="screen">
        <param name="suppress1" value="$(arg name)/map"/>
        <param name="suppress2" value="map"/>
        <rosparam param="switcheroos">
          - /chinook/odom: {replacement_vel: /chinook/cmd_vel, replacement_thresh: 0.5, acceleration: 5.0}
        </rosparam>
      </node>
    </group>
  </group>
  <group unless="$(arg reodom)">
    <group if="$(arg noodom)">
      <node pkg="tf_hijacker" type="tf_hijacker" name="tf_hijacker" output="screen">
        <param name="suppress1" value="$(arg name)/map"/>
        <param name="suppress2" value="map"/>
        <param name="suppress3" value="$(arg name)/odom"/>
      </node>
    </group>
    <group unless="$(arg noodom)">
      <node pkg="tf_hijacker" type="tf_hijacker" name="tf_hijacker" output="screen">
        <param name="suppress1" value="$(arg name)/map"/>
        <param name="suppress2" value="map"/>
      </node>
    </group>
  </group>
  <group if="$(arg reproject)">
    <node pkg="rosbag" type="play" name="bagplay" args="$(env PWD)/$(arg bag) --rate $(arg rate) --pause --clock --topics /chinook/boson/camera_info /chinook/boson/image_raw /chinook/boson/image_raw/compressed /chinook/cmd_vel /chinook/husky_velocity_controller/odom /chinook/imu/data /chinook/joy /chinook/mac80211/scan /chinook/multisense/calibration/device_info /chinook/multisense/calibration/raw_cam_cal /chinook/multisense/calibration/raw_cam_config /chinook/multisense/calibration/raw_lidar_cal /chinook/multisense/depth/camera_info /chinook/multisense/depth/compressedDepth /chinook/multisense/imu/accelerometer /chinook/multisense/imu/accelerometer_vector /chinook/multisense/imu/gyroscope /chinook/multisense/imu/gyroscope_vector /chinook/multisense/imu/imu_data /chinook/multisense/imu/magnetometer /chinook/multisense/imu/magnetometer_vector /chinook/multisense/left/camera_info /chinook/multisense/left/image_rect_color/camera_info /chinook/multisense/left/image_rect_color/compressed /chinook/multisense/lidar_points2 /chinook/multisense/pps /chinook/multisense/right/camera_info /chinook/multisense/right/image_rect/camera_info /chinook/multisense/right/image_rect/compressed /chinook/multisense/stamped_pps /chinook/multisense/status /chinook/odom /chinook/ouster/imu_packets /chinook/ouster/lidar_packets /diagnostics_agg /tf /tf_static tf:=tf_remap" launch-prefix="xterm -e"/>
    <group ns="$(arg name)">
      <node pkg="nodelet" type="nodelet" name="assemble_nodelet"
        args="standalone ouster_assembler/AssembleNodelet" output="screen">
        <param name="lidar_frame" value="ouster_lidar" />
        <param name="fixed_frame" value="odom"/>
        <param name="sensor_frame" value="ouster"/>
        <param name="assembled_cloud_frame" value="base"/>
        <param name="ouster_config_service" value="ouster/os1_config" />
        <param name="max_time_diff" value="1.0" />
        <param name="utc_leap_seconds" value="37" />	
        <param name="platform" value="$(arg name)"/>
        <param name="load_calibration_file" value="/var/tmp/oustercal"/>
      </node>
    </group>
  </group>
  <group unless="$(arg reproject)">
    <node pkg="rosbag" type="play" name="bagplay" args="$(env PWD)/$(arg bag) --rate $(arg rate) --pause --clock --topics /chinook/boson/camera_info /chinook/boson/image_raw /chinook/boson/image_raw/compressed /chinook/cmd_vel /chinook/husky_velocity_controller/odom /chinook/imu/data /chinook/joy /chinook/mac80211/scan /chinook/multisense/calibration/device_info /chinook/multisense/calibration/raw_cam_cal /chinook/multisense/calibration/raw_cam_config /chinook/multisense/calibration/raw_lidar_cal /chinook/multisense/depth/camera_info /chinook/multisense/depth/compressedDepth /chinook/multisense/imu/accelerometer /chinook/multisense/imu/accelerometer_vector /chinook/multisense/imu/gyroscope /chinook/multisense/imu/gyroscope_vector /chinook/multisense/imu/imu_data /chinook/multisense/imu/magnetometer /chinook/multisense/imu/magnetometer_vector /chinook/multisense/left/camera_info /chinook/multisense/left/image_rect_color/camera_info /chinook/multisense/left/image_rect_color/compressed /chinook/multisense/lidar_points2 /chinook/multisense/pps /chinook/multisense/right/camera_info /chinook/multisense/right/image_rect/camera_info /chinook/multisense/right/image_rect/compressed /chinook/multisense/stamped_pps /chinook/multisense/status /chinook/assembled_cloud /chinook/ouster/points /chinook/odom /chinook/ouster/imu_packets /chinook/ouster/lidar_packets /diagnostics_agg /tf /tf_static tf:=tf_remap" launch-prefix="xterm -e"/>
  </group>
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(env PWD)/rviz.rviz"/>
  <node pkg="static_transform_mux" type="static_transform_mux" name="static_transform_mux"/>
  <node if="$(arg mark_artifacts)" pkg="subt_artifact_report" type="subt_scoring_node" name="subt_coding_node" output="screen">
    <param name="image" value="/$(arg name)/multisense/left/image_rect_color"/>
    <param name="depth_image" value="/$(arg name)/multisense/depth"/>
    <remap from="camera_info" to="/$(arg name)/multisense/left/image_rect_color/camera_info"/>
    <param name="object_classes" value="$(env PWD)/object_classes"/>
    <param name="report_frame" value="$(arg name)/base_link"/>
    <param name="outfile" value="$(env PWD)/coded_artifacts/$(arg bag).artifacts"/>
    <param name="gt_filename" value="$(env PWD)/gt_$(arg course)_$(arg config).csv"/>
    <param name="artifacts_filename" value="$(env PWD)/coded_artifacts/$(arg bag).artifacts"/>
    <param name="output_filename" value="/var/tmp/report"/>
    <param name="use_optical_frame_report" value="false"/>
    <param name="fiducial_file" value="$(env PWD)/fiducial_$(arg course)"/>
    <param name="coding_mode" value="true"/>
  </node>
  <node unless="$(arg mark_artifacts)" pkg="subt_artifact_report" type="subt_scoring_node" name="scoring_node" output="screen">
    <param name="gt_filename" value="$(env PWD)/gt_$(arg course)_$(arg config).csv"/>
    <param name="artifacts_filename" value="$(env PWD)/coded_artifacts/$(arg bag).artifacts"/>
    <param name="output_filename" value="/var/tmp/report"/>
    <param name="use_optical_frame_report" value="false"/>
    <param name="fiducial_file" value="$(env PWD)/fiducial_$(arg course)"/>
    <param name="coding_mode" value="false"/>

  </node>
  <group ns="$(arg name)">
    <param name="tf_prefix" value="$(arg name)"/>
    <node
      name="$(anon robot_mesh_pub3)" pkg="rostopic" type="rostopic"
      args="pub -l -r 1.0 /$(arg name)/robot_marker visualization_msgs/Marker '{header: {frame_id: &quot;$(arg name)/base&quot;}, type: 10, pose: {position: {x: 0, y: 0, z: 0.17}, orientation: {x: 0.707, y: 0.707, z: 0.0, w: 0.0}}, scale: {x: 1.0, y: 1.0, z: 1.0}, color: {r: 0.7, g: 0.7, b: 0.0, a: 1.0}, frame_locked: true, mesh_use_embedded_materials: true, mesh_resource: &quot;package://demo_cerberus_explore/meshes/husky.dae&quot;}'"
      output="screen"/>

    <!--    <param name="robot_description"
        command="$(find husky_description)/scripts/env_run
        $(find husky_description)/urdf/configs/husky
    $(find xacro)/xacro $(find husky_description)/urdf/husky.urdf.xacro ns:=$(arg name)" /> -->
    <!-- Only one of these should be activated at a time-->
    <group if="$(arg omnimapper)"> 
      <param name="/scoring_node/rmse_filename" value="$(env PWD)/$(arg bag).omnimapper.rmse"/>
      <include if="$(arg omnimapper)" file="$(find mapping_launch)/launch/omnimapper_3d.launch">
        <arg name="name" value="$(arg name)"/>
      </include> 
    </group>
    <group if="$(arg cartographer)"> 
      <param name="/scoring_node/rmse_filename" value="$(env PWD)/$(arg bag).cartographer.rmse"/>
      <include file="$(find tunnel_ckt_launch)/launch/cartographer.launch">
        <arg name="name" value="$(arg name)"/>
      </include>
    </group>
    <group if="$(arg gmapping)"> 
      <param name="/scoring_node/rmse_filename" value="$(env PWD)/$(arg bag).gmapping.rmse"/>
      <include file="gmapping.launch">
        <arg name="name" value="$(arg name)"/>
      </include>
    </group>
    <group if="$(arg odom_only)">
      <node if="$(arg odom_only)" name="odom_map_tf_pub" type="static_transform_publisher" pkg="tf2_ros" args="0 0 0 0 0 0 map $(arg name)/odom"/>
      <param name="/scoring_node/rmse_filename" value="$(env PWD)/$(arg bag).odom_only.rmse"/>
    </group>
  </group>

  <group if="$(arg bag_out)">
    <node pkg="rosbag" type="record" name="record" args="-O $(env PWD)/$(arg bag).out.bag /tf /tf_static /$(arg name)/point_cloud_cache/renderers/full_cloud /$(arg name)/point_cloud_cache/renderers/full_map /SubT_markers"/>
  </group>
  <param name="/chinook/point_cloud_cache/renderers/point_cloud/on_demand_cloud_only" value="true"/>
</launch>
